# Production Nginx with SSL for redidencial.cor-web.com

server {
    listen 80;
    server_name redidencial.cor-web.com;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name redidencial.cor-web.com;

    # TLS configuration (cert paths should be mounted via Compose)
    ssl_certificate     /etc/letsencrypt/live/redidencial.cor-web.com/fullchain.pem; # placeholder
    ssl_certificate_key /etc/letsencrypt/live/redidencial.cor-web.com/privkey.pem;   # placeholder
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header Referrer-Policy no-referrer-when-downgrade;

    # Static React app
    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    # Backend API proxy (Spring Boot)
    location /api/ {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 60s;
        proxy_connect_timeout 5s;
    }

    # Cache static assets
    location ~* \.(?:css|js|png|jpg|jpeg|gif|ico|svg|woff2?)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Optional: limit upload size (adjust as needed)
    client_max_body_size 10m;
}

