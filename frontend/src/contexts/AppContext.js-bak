// (auto-concat)
import React, { useState, createContext, useContext } from 'react';
import { CONSTANTS } from '../constants';
// --- /src/contexts/AppContext.js ---
// Crea un Context de React para la gestión del estado global.
const AppContext = createContext(null);
export const useAppContext = () => {
    const context = useContext(AppContext);
    if (context === null) throw new Error("useAppContext must be used within an AppProvider");
    return context;
};
export const AppProvider = ({ children }) => {
    const [persona, setPersona] = useState('resident');
    const [activeView, setActiveView] = useState('auth');
    const [isLoggedIn, setIsLoggedIn] = useState(false);
    const [currentUser, setCurrentUser] = useState(null);
    const [isMenuOpen, setIsMenuOpen] = useState(false);
    const [toast, setToast] = useState({ message: '', isVisible: false });

    const showToast = (message) => {
        setToast({ message, isVisible: true });
        setTimeout(() => setToast({ message: '', isVisible: false }), 3000);
    };

    const navigateTo = (viewId) => {
        setActiveView(viewId);
        setIsMenuOpen(false);
    };
    
    const handleLoginSuccess = (user, accessToken) => {
        setPersona(user.role === 'ADMIN' ? 'admin' : 'resident');
        const mockHousehold = {
            id: 1,
            building_number: 'Torre 101',
            unit_number: 'Apto 1502'
        };
        setCurrentUser(user);
        setIsLoggedIn(true);
        setActiveView('dashboard');
    };

    const handleLogout = () => {
        setIsLoggedIn(false);
        setCurrentUser(null);
        setActiveView('auth');
        showToast("Se ha cerrado la sesión.");
    };

    const value = { persona, activeView, isLoggedIn, currentUser, setCurrentUser, isMenuOpen, contentData: CONSTANTS.CONTENT_DATA, toast, navigateTo, handleLoginSuccess, handleLogout, showToast, setIsMenuOpen };
    return <AppContext.Provider value={value}>{children}</AppContext.Provider>;
};